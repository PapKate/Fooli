<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fooli</name>
    </assembly>
    <members>
        <member name="T:Fooli.FooliDBContext">
            <summary>
            Represents the database structure
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Users">
            <summary>
            The users
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Companies">
            <summary>
            The companies
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Branches">
            <summary>
            The branches
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.CompanyProducts">
            <summary>
            The company's products
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.PricePerMeasurementUnits">
            <summary>
            The price per measurement unit pairs
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Products">
            <summary>
            The products
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Categories">
            <summary>
            The categories
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.ProductCategories">
            <summary>
            The products categories pairs
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.ProductLabels">
            <summary>
            The product label pairs
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Leaflets">
            <summary>
            The leaflets
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Images">
            <summary>
            The images
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.Notes">
            <summary>
            The note lists
            </summary>
        </member>
        <member name="P:Fooli.FooliDBContext.CheckListItems">
            <summary>
            The list items
            </summary>
        </member>
        <member name="M:Fooli.FooliDBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Fooli.FooliDBContext})">
            <summary>
            Default constructor
            </summary>
            <param name="options">The options</param>
        </member>
        <member name="M:Fooli.FooliDBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override this method to further configure the model that was discovered by convention
            from the entity types exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1"/> properties
            on your derived context. The resulting model may be cached and re-used for subsequent
            instances of your derived context.
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:Fooli.CompanyController">
            <summary>
            Api companies
            </summary>
        </member>
        <member name="F:Fooli.CompanyController.mContext">
            <summary>
            The DB context
            </summary>
        </member>
        <member name="P:Fooli.CompanyController.CompaniesQuery">
            <summary>
            The query used for retrieving the companies
            </summary>
        </member>
        <member name="P:Fooli.CompanyController.LeafletsQuery">
            <summary>
            The query used for retrieving the leaflets
            </summary>
        </member>
        <member name="P:Fooli.CompanyController.ImagesQuery">
            <summary>
            The query used for retrieving the images
            </summary>
        </member>
        <member name="P:Fooli.CompanyController.BranchesQuery">
            <summary>
            The query used for retrieving the branches
            </summary>
        </member>
        <member name="M:Fooli.CompanyController.#ctor(Fooli.FooliDBContext)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.CompanyController.CreateCompanyAsync(Fooli.CompanyRequestModel)">
            <summary>
            Creates a new company
            </summary>
            <param name="model">The company request model</param>
            Post fooli/companies
        </member>
        <member name="M:Fooli.CompanyController.GetCompaniesAsync">
            <summary>
            Gets all the companies
            </summary>
            Get fooli/companies
        </member>
        <member name="M:Fooli.CompanyController.GetCompanyAsync(System.Int32)">
            <summary>
            Gets the company with the specified id
            </summary>
            <param name="companyId">The company's id</param>
            Get fooli/companies/2
        </member>
        <member name="M:Fooli.CompanyController.UpdateCompanyAsync(System.Int32,Fooli.CompanyRequestModel)">
            <summary>
            Updates the data of the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyController.DeleteCompanyAsync(System.Int32)">
            <summary>
            Deletes the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            Delete fooli/companies/3
        </member>
        <member name="M:Fooli.CompanyController.CreateLeafletAsync(System.Int32,Fooli.LeafletRequestModel)">
            <summary>
            Creates a new leaflet
            </summary>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            Post fooli/companies/5/leaflets
        </member>
        <member name="M:Fooli.CompanyController.GetLeafletsAsync(System.Int32)">
            <summary>
            Gets all the leaflets that belong to the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            Get fooli/companies/1/leaflets
        </member>
        <member name="M:Fooli.CompanyController.GetLeafletAsync(System.Int32,System.Int32)">
            <summary>
            Gets the leaflet with the <paramref name="leafletId"/> that belongs to the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="leafletId">The leaflet's id</param>
            Get fooli/companies/1/leaflets/4
        </member>
        <member name="M:Fooli.CompanyController.DeleteLeafletAsync(System.Int32,System.Int32)">
            <summary>
            Deletes a leaflet with the specified <paramref name="leafletId"/> that belongs to the  company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId"></param>
            <param name="leafletId"></param>
            Delete fooli/companies/1/leaflets/4
        </member>
        <member name="M:Fooli.CompanyController.CreateBranchAsync(System.Int32,Fooli.BranchRequestModel)">
            <summary>
            Creates a branch for the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            fooli/companies/2/branches
        </member>
        <member name="M:Fooli.CompanyController.GetAllBranchesAsync(System.Int32)">
            <summary>
            Gets all the branches of the company with the specified <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyController.GetBranchAsync(System.Int32,System.Int32)">
            <summary>
            Gets the branch with the specified <paramref name="branchId"/> and <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="branchId">The branch's Id</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyController.DeleteBranchAsync(System.Int32,System.Int32)">
            <summary>
            Deletes the branch with the specified <paramref name="branchId"/> and <paramref name="companyId"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="branchId">The branch's id</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyController.CreateImageAsync(System.Int32,Fooli.ImageRequestModel)">
            <summary>
            Creates a new company image
            </summary>
            <param name="branchId">The branch's id</param>
            <param name="model">The model</param>
            Post fooli/companies/5/branches/4/images
        </member>
        <member name="M:Fooli.CompanyController.GetImagesAsync(System.Int32)">
            <summary>
            Gets all the images that belong to the company with the specified <paramref name="branchId"/>
            </summary>
            <param name="branchId">The branch's id</param>
            Get fooli/companies/1/branches/4/images
        </member>
        <member name="M:Fooli.CompanyController.GetImageAsync(System.Int32,System.Int32)">
            <summary>
            Gets the image with the <paramref name="imageId"/> that belongs to the company with the specified <paramref name="branchId"/>
            </summary>
            <param name="branchId">The branch's id</param>
            <param name="imageId">The image's id</param>
            Get fooli/companies/1/branches/4/images/5
        </member>
        <member name="M:Fooli.CompanyController.DeleteImageAsync(System.Int32,System.Int32)">
            <summary>
            Deletes an image with the specified <paramref name="imageId"/> that belongs to the  company with the specified <paramref name="branchId"/>
            </summary>
            <param name="branchId">The branch's id</param>
            <param name="imageId">The image's id</param>
            Delete fooli/companies/1/branches/4/images/6
        </member>
        <member name="T:Fooli.NoteConstroller">
            <summary>
            Api notes and check lists items
            </summary>
        </member>
        <member name="F:Fooli.NoteConstroller.mContext">
            <summary>
            The DB context
            </summary>
        </member>
        <member name="P:Fooli.NoteConstroller.NotesQuery">
            <summary>
            The query used for retrieving the notes
            </summary>
        </member>
        <member name="P:Fooli.NoteConstroller.CheckListItemsQuery">
            <summary>
            The query used for retrieving the check list items
            </summary>
        </member>
        <member name="M:Fooli.NoteConstroller.#ctor(Fooli.FooliDBContext)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.NoteConstroller.CreateNoteAsync(System.Int32,Fooli.NoteRequestModel)">
            <summary>
            Creates a new list
            </summary>
            <param name="userId"></param>
            <param name="model">The list request model</param>
            Post fooli/lists
        </member>
        <member name="M:Fooli.NoteConstroller.GetNotesAsync(System.Int32)">
            <summary>
            Gets all the lists from the database that belong to the user with the specified id
            </summary>
            Get fooli/users/{id}/lists
        </member>
        <member name="M:Fooli.NoteConstroller.GetNoteAsync(System.Int32,System.Int32)">
            <summary>
            Gets the list with the specified id
            </summary>
            <param name="userId"></param>
            <param name="noteId">The specified id</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.NoteConstroller.UpdateNoteAsync(System.Int32,System.Int32,Fooli.NoteRequestModel)">
            <summary>
            Updates the list with the specified id
            </summary>
            <param name="userId"></param>
            <param name="noteId">The id</param>
            <param name="model">The list request model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.NoteConstroller.DeleteNoteAsync(System.Int32,System.Int32)">
            <summary>
            Deletes the note with the specified noteId and userId
            </summary>
            Delete /fooli/users/{userId}/notes/{noteId}
        </member>
        <member name="M:Fooli.NoteConstroller.CreateCheckListItemAsync(System.Int32,System.Int32,Fooli.CheckListItemRequestModel)">
            <summary>
            Creates a new check list item and returns the note it belongs to 
            </summary>
            <param name="userId">The user's id</param>
            <param name="noteId">The note's id</param>
            <param name="model">The check list item request model</param>
            Post fooli/users/2/notes/1/checkListItems
        </member>
        <member name="M:Fooli.NoteConstroller.GetCheckListItemsAsync(System.Int32,System.Int32)">
            <summary>
            Gets all the check list items of a user's note
            </summary>
            Get fooli/users/2/notes/1/checkListItems
        </member>
        <member name="M:Fooli.NoteConstroller.GetCheckListItemAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the check list item of a user's note wit the specified id
            </summary>
            Get fooli/users/2/notes/1/checkListItems/5
        </member>
        <member name="M:Fooli.NoteConstroller.UpdateCheckListItemAsync(System.Int32,System.Int32,System.Int32,Fooli.CheckListItemRequestModel)">
            <summary>
            Updates a check list item and returns the note it belongs to 
            </summary>
            <param name="userId">The user's id</param>
            <param name="noteId">The note's id</param>
            <param name="checkListItemId">The check list item's id</param>
            <param name="model">The check list item request model</param>
            Put fooli/users/2/notes/1/checkListItems/3
        </member>
        <member name="M:Fooli.NoteConstroller.DeleteCheckListItemAsync(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes a check list item with the specified id if exists and returns the note it was deleted from
            </summary>
            <param name="userId">The user's id</param>
            <param name="noteId">The note's id</param>
            <param name="checkListItemId">The check list item's id</param>
            Delete fooli/users/2/notes/1/checkListItems/3
        </member>
        <member name="T:Fooli.ProductController">
            <summary>
            The product's controller
            </summary>
        </member>
        <member name="F:Fooli.ProductController.mContext">
            <summary>
            The DB context
            </summary>
        </member>
        <member name="P:Fooli.ProductController.ProductsQuery">
            <summary>
            The query used for retrieving the products
            </summary>
        </member>
        <member name="P:Fooli.ProductController.CompanyProductsQuery">
            <summary>
            The query used for retrieving the company products
            </summary>
        </member>
        <member name="P:Fooli.ProductController.ImagesQuery">
            <summary>
            The query used for retrieving the images
            </summary>
        </member>
        <member name="P:Fooli.ProductController.CategoriesQuery">
            <summary>
            The query used for retrieving the categories
            </summary>
        </member>
        <member name="P:Fooli.ProductController.LabelsQuery">
            <summary>
            The query used for retrieving the labels
            </summary>
        </member>
        <member name="M:Fooli.ProductController.#ctor(Fooli.FooliDBContext)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.ProductController.CreateProductAsync(Fooli.ProductRequestModel)">
            <summary>
            Creates a product
            </summary>
            <param name="model">The model</param>
            fooli/products
        </member>
        <member name="M:Fooli.ProductController.GetAllProductsAsync">
            <summary>
            Gets all the products
            </summary>
            fooli/products
        </member>
        <member name="M:Fooli.ProductController.GetProductAsync(System.Int32)">
            <summary>
            Gets the product with the specified <paramref name="productId"/>
            </summary>
            <param name="productId">The product's id</param>
            fooli/products/8
        </member>
        <member name="M:Fooli.ProductController.DeleteProductAsync(System.Int32)">
            <summary>
            Deletes the product with the specified <paramref name="productId"/>
            </summary>
            <param name="productId">The product's id</param>
            fooli/products/7
        </member>
        <member name="M:Fooli.ProductController.CreateCompanyProductAsync(System.Int32,System.Int32,Fooli.CompanyProductRequestModel)">
            <summary>
            Creates a new company product 
            </summary>
            <param name="productId">The product's id</param>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            Post fooli/companies/2/companyProducts
        </member>
        <member name="M:Fooli.ProductController.CreateProductImageAsync(System.Int32,Fooli.ImageRequestModel)">
            <summary>
            Creates a new product image
            </summary>
            <param name="productId">The product's id</param>
            <param name="model">The model</param>
            Get fooli/products/1/images
        </member>
        <member name="M:Fooli.ProductController.GetImagesAsync(System.Int32)">
            <summary>
            Gets all the images that belong to the product with the specified <paramref name="productId"/>
            </summary>
            <param name="productId">The product's id</param>
            Get fooli/products/1/images
        </member>
        <member name="M:Fooli.ProductController.GetImageAsync(System.Int32,System.Int32)">
            <summary>
            Gets the image with the <paramref name="imageId"/> that belongs to the product with the specified <paramref name="productId"/>
            </summary>
            <param name="productId">The product's id</param>
            <param name="imageId">The image's id</param>
            Get fooli/products/1/images/5
        </member>
        <member name="M:Fooli.ProductController.DeleteImageAsync(System.Int32,System.Int32)">
            <summary>
            Deletes an image with the specified <paramref name="imageId"/> that belongs to the product with the specified <paramref name="productId"/>
            </summary>
            <param name="productId">The product's id</param>
            <param name="imageId">The image's id</param>
            Delete fooli/products/1/images/6
        </member>
        <member name="M:Fooli.ProductController.CreateCategoryAsync(Fooli.CategoryRequestModel)">
            <summary>
            Creates a new Category
            </summary>
            <param name="model">The model</param>
            fooli/categories
        </member>
        <member name="M:Fooli.ProductController.GetCategoriesAsync">
            <summary>
            Gets all the categories
            </summary>
            fooli/categories
        </member>
        <member name="M:Fooli.ProductController.GetCategoryAsync(System.Int32)">
            <summary>
            Gets the <see cref="T:Fooli.CategoryResponseModel"/> with the specified <paramref name="categoryId"/>
            </summary>
            <param name="categoryId">The category's id</param>
            fooli/categories/7
        </member>
        <member name="M:Fooli.ProductController.DeleteCategoryAsync(System.Int32)">
            <summary>
            Deletes the <see cref="T:Fooli.CategoryEntity"/> with the specified <paramref name="categoryId"/>
            </summary>
            <param name="categoryId"></param>
            fooli/categories/8
        </member>
        <member name="M:Fooli.ProductController.CreateLabelAsync(Fooli.LabelRequestModel)">
            <summary>
            Creates a new label
            </summary>
            <param name="model">The model</param>
            fooli/labels
        </member>
        <member name="M:Fooli.ProductController.GetLabels">
            <summary>
            Gets all the labels
            </summary>
            fooli/labels
        </member>
        <member name="M:Fooli.ProductController.GetLabel(System.Int32)">
            <summary>
            Gets the <see cref="T:Fooli.LabelResponseModel"/> with the specified <paramref name="labelId"/>
            </summary>
            <param name="labelId">The label's id </param>
            fooli/labels/4
        </member>
        <member name="M:Fooli.ProductController.DeleteLabel(System.Int32)">
            <summary>
            Deletes the label with the specified <paramref name="labelId"/>
            </summary>
            <param name="labelId">The id</param>
            <returns></returns>
        </member>
        <member name="T:Fooli.UserController">
            <summary>
            Api users
            </summary>
        </member>
        <member name="F:Fooli.UserController.mContext">
            <summary>
            The DB context
            </summary>
        </member>
        <member name="M:Fooli.UserController.#ctor(Fooli.FooliDBContext)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.UserController.CreateUserAsync(Fooli.UserRequestModel)">
            <summary>
            Creates a new user
            </summary>
            Post fooli/users
        </member>
        <member name="M:Fooli.UserController.GetUsersAsync">
            <summary>
            Gets all the users from the database
            </summary>
            Get fooli/users
        </member>
        <member name="M:Fooli.UserController.GetUserAsync(System.Int32)">
            <summary>
            Gets the user with the specified id from the database if exists...
            Else returns not found
            </summary>
            <param name="userId">The user's id</param>
            Get fooli/users/{userId} == fooli/users/2
        </member>
        <member name="M:Fooli.UserController.UpdateUserAsync(System.Int32,Fooli.UserRequestModel)">
            <summary>
            Updates the user with the specified id
            </summary>
            <param name="userId">The user's id</param>
            <param name="model">The user request model</param>
            Put /fooli/users/{userId}
        </member>
        <member name="M:Fooli.UserController.DeleteUserAsync(System.Int32)">
            <summary>
            Deletes the user with the specified id if exists from the database
            </summary>
            <param name="userId">The user's id</param>
            Delete /fooli/users/{userId}
        </member>
        <member name="T:Fooli.BaseEntity">
            <summary>
            The base entity with the date created and modified properties
            </summary>
        </member>
        <member name="P:Fooli.BaseEntity.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Fooli.BaseEntity.DateCreated">
            <summary>
            The date it was created
            </summary>
        </member>
        <member name="P:Fooli.BaseEntity.DateModified">
            <summary>
            The date it was last modified
            </summary>
        </member>
        <member name="M:Fooli.BaseEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.BranchEntity">
            <summary>
            The branch entity
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.Company">
            <summary>
            The related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.BranchEntity.Images">
            <summary>
            The images
            </summary>
        </member>
        <member name="M:Fooli.BranchEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.BranchEntity.FromRequestModel(System.Int32,Fooli.BranchRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.BranchEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.BranchEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.BranchResponseModel"/> from the current <see cref="T:Fooli.BranchEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.CompanyEntity">
            <summary>
            Represents a company in the database
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.LogoImageName">
            <summary>
            The name of the logo image
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.LogoImageSource">
            <summary>
            The logo image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.LogoImageAlt">
            <summary>
            The logo image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.TextImageName">
            <summary>
            The name of the text image
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.TextImageSource">
            <summary>
            The text image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.TextImageAlt">
            <summary>
            The text image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.CompayProducts">
            <summary>
            The companies and products
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.Leaflets">
            <summary>
            The company's leaflets
            </summary>
        </member>
        <member name="P:Fooli.CompanyEntity.Branches">
            <summary>
            The company's branches
            </summary>
        </member>
        <member name="M:Fooli.CompanyEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.CompanyEntity.FromRequestModel(Fooli.CompanyRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.CompanyEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.CompanyResponseModel"/> from the current <see cref="T:Fooli.CompanyEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.CompanyProductEntity">
            <summary>
            Represents a company's product
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Αbbreviation">
            <summary>
            The abbreviation
            ex. TM, kg, gr
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Price">
            <summary>
            The price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.DateOnSaleFrom">
            <summary>
            Start date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.DateOnSaleTo">
            <summary>
            End date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.StockQuantity">
            <summary>
            Total number of products in stock
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.IsPurchasable">
            <summary>
            Shows if the product can be bought
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.IsVerified">
            <summary>
            The product is verified by the company
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Company">
            <summary>
            The related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.ProductrId">
            <summary>
            The <see cref="T:Fooli.ProductEntity"/> of the related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.Product">
            <summary>
            The related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductEntity.PricesPerMeasurementUnits">
            <summary>
            The prices per measurement of the product
            </summary>
        </member>
        <member name="M:Fooli.CompanyProductEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.CompanyProductEntity.FromRequestModel(System.Int32,System.Int32,Fooli.CompanyProductRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.CompanyProductEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="productId">The product's id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CompanyProductEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.CompanyProductResponseModel"/> from the current <see cref="T:Fooli.CompanyProductEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.LeafletEntity">
            <summary>
            Represents a leaflet in the database
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.Url">
            <summary>
            The url 
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.DateStart">
            <summary>
            The date from which the leaflet applies
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.DateEnd">
            <summary>
            The date that ends what the leaflet applies
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.LeafletEntity.Company">
            <summary>
            The related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.LeafletEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.LeafletEntity.FromRequestModel(System.Int32,Fooli.LeafletRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.LeafletEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="companyId">The company's id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.LeafletEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.LeafletResponseModel"/> from the current <see cref="T:Fooli.LeafletEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.ImageEntity">
            <summary>
            Represents an image in the database
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.Source">
            <summary>
            The image's url
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.Alt">
            <summary>
            The image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.ProductId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.Product">
            <summary>
            The related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.BranchId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.BranchEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ImageEntity.Branch">
            <summary>
            The related <see cref="T:Fooli.BranchEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.ImageEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.ImageEntity.FromRequestModel(System.Int32,Fooli.ImageRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.ImageEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="branchId">The branch's id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ImageEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.ImageResponseModel"/> from the current <see cref="T:Fooli.ImageEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.CheckListItemEntity">
            <summary>
            Represents a list item in the database
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemEntity.Text">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemEntity.IsChecked">
            <summary>
            Shows if it is checked
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemEntity.NoteId">
            <summary>
            The <see cref="!:NoteEntity.Id"/> of the related <see cref="T:Fooli.NoteEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemEntity.Note">
            <summary>
            The related <see cref="T:Fooli.NoteEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.CheckListItemEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.CheckListItemEntity.FromRequestModel(System.Int32,Fooli.CheckListItemRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.CheckListItemEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="noteId"></param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CheckListItemEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.CheckListItemResponseModel"/> from the current <see cref="T:Fooli.CheckListItemEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.NoteEntity">
            <summary>
            Represents a note in the database
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.CheckListItems">
            <summary>
            The check list's items
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.UserId">
            <summary>
            The <see cref="!:UserEntity.Id"/> of the related <see cref="T:Fooli.UserEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.NoteEntity.User">
            <summary>
            The related <see cref="T:Fooli.UserEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.NoteEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.NoteEntity.FromRequestModel(System.Int32,Fooli.NoteRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.NoteEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="userId">The user id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.NoteEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.NoteResponseModel"/> from the current <see cref="T:Fooli.NoteEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.CategoryEntity">
            <summary>
            Represents a category in the database
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.Name">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.Path">
            <summary>
            The category icon's path
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.ParentCategoryId">
            <summary>
            The id of the parent category
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CategoryEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.ParentCategory">
            <summary>
            The related <see cref="T:Fooli.CategoryEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.ChildrenCategories">
            <summary>
            The children categories
            </summary>
        </member>
        <member name="P:Fooli.CategoryEntity.ProductCategories">
            <summary>
            The products categories pair
            </summary>
        </member>
        <member name="M:Fooli.CategoryEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.CategoryEntity.FromRequestModel(Fooli.CategoryRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.CategoryEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.CategoryEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.CategoryResponseModel"/> from the current <see cref="T:Fooli.CategoryEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.LabelEntity">
            <summary>
            Represents a label in the database
            </summary>
        </member>
        <member name="P:Fooli.LabelEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LabelEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.LabelEntity.Slug">
            <summary>
            The slug
            </summary>
        </member>
        <member name="P:Fooli.LabelEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Fooli.LabelEntity.ProductLabels">
            <summary>
            The labels and products
            </summary>
        </member>
        <member name="M:Fooli.LabelEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.LabelEntity.FromRequestModel(Fooli.LabelRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.LabelEntity"/> from the specified <paramref name="model"/>
            <paramref name="model">The model</paramref>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fooli.LabelEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.LabelResponseModel"/> from the current <see cref="T:Fooli.ImageEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.PricePerMeasurementUnitEntity">
            <summary>
            Represents a measurement unit in the data base
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.Name">
            <summary>
            The name 
            ex. kilograms
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.Αbbreviation">
            <summary>
            The abbreviation
            ex. TM, kg, gr
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.RegularPrice">
            <summary>
            The regular price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.SalePrice">
            <summary>
            The price of the product when on sale
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.CompanyProductId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitEntity.CompanyProduct">
            <summary>
            The related <see cref="T:Fooli.CompanyProductEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.PricePerMeasurementUnitEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductCategoryEntity">
            <summary>
            Represents a category product pair
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryEntity.ProductId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryEntity.Product">
            <summary>
            The related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryEntity.CategoryId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CategoryEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryEntity.Category">
            <summary>
            The related <see cref="T:Fooli.CategoryEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductCategoryEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductEntity">
            <summary>
            Represents a product in the database
            </summary>
        </member>
        <member name="P:Fooli.ProductEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.ProductEntity.Images">
            <summary>
            The product's images
            </summary>
        </member>
        <member name="P:Fooli.ProductEntity.CompaniesProducts">
            <summary>
            The companies and products
            </summary>
        </member>
        <member name="P:Fooli.ProductEntity.ProductLabels">
            <summary>
            The labels and products
            </summary>
        </member>
        <member name="P:Fooli.ProductEntity.ProductCategories">
            <summary>
            The category and product pairs
            </summary>
        </member>
        <member name="M:Fooli.ProductEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.ProductEntity.FromRequestModel(Fooli.ProductRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.ProductEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ProductEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.ProductResponseModel"/> from the current <see cref="T:Fooli.ProductEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.ProductLabelEntity">
            <summary>
            Represents a product label pair in the database
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelEntity.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelEntity.ProductId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelEntity.Product">
            <summary>
            The related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelEntity.LabelId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.LabelEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelEntity.Label">
            <summary>
            The related <see cref="T:Fooli.LabelEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductLabelEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.UserEntity">
            <summary>
            Represents a user in the database
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.PictureUrl">
            <summary>
            The profile's picture url
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Type">
            <summary>
            The user's type
            By default customer
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Gender">
            <summary>
            The gender
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Address1">
            <summary>
            The first-main address
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.Address2">
            <summary>
            The secondary address
            </summary>
        </member>
        <member name="P:Fooli.UserEntity.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="M:Fooli.UserEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.UserEntity.FromRequestModel(Fooli.UserRequestModel)">
            <summary>
            Creates and returns a <see cref="T:Fooli.UserEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.UserEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:Fooli.UserResponseModel"/> from the current <see cref="T:Fooli.UserEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fooli.IFooliRepository">
            <summary>
            The app's repository
            </summary>
        </member>
        <member name="M:Fooli.IUserRepository.GetUsers">
            <summary>
            Gets all the existing users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fooli.IUserRepository.GetUserByID(System.Int32)">
            <summary>
            Gets the user with the specified ID if exists...
            Else throws error
            </summary>
            <param name="userId">The desired user's id</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.IUserRepository.InsertUser(Fooli.UserEntity)">
            <summary>
            Adds a user to the database
            </summary>
            <param name="user">The user</param>
        </member>
        <member name="M:Fooli.IUserRepository.DeleteUser(Fooli.UserEntity)">
            <summary>
            Deletes a user from the database
            </summary>
            <param name="user">The user</param>
        </member>
        <member name="M:Fooli.IUserRepository.UpdateUser(Fooli.UserEntity)">
            <summary>
            Updates a user's data in the database
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Fooli.IUserRepository.SaveChanges">
            <summary>
            Saves changes in the database
            </summary>
        </member>
        <member name="T:Fooli.BaseRequestModel">
            <summary>
            Empty
            </summary>
        </member>
        <member name="M:Fooli.BaseRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.BranchRequestModel">
            <summary>
            The branch request model
            </summary>
        </member>
        <member name="P:Fooli.BranchRequestModel.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.BranchRequestModel.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.BranchRequestModel.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Fooli.BranchRequestModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:Fooli.BranchRequestModel.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="M:Fooli.BranchRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CompanyProductRequestModel">
            <summary>
            The company product request model
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.Price">
            <summary>
            The product's price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.RegularPrice">
            <summary>
            The regular price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.SalePrice">
            <summary>
            The price of the product when on sale
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.DateOnSaleFrom">
            <summary>
            Start date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.DateOnSaleTo">
            <summary>
            End date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.StockQuantity">
            <summary>
            Total number of products in stock
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.IsPurchasable">
            <summary>
            Shows if the product can be bought
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.IsVerified">
            <summary>
            The product is verified by the company
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.CompanyId">
            <summary>
            The <see cref="!:CompanyEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductRequestModel.ProductId">
            <summary>
            The <see cref="!:ProductEntity.Id"/> of the related <see cref="T:Fooli.ProductEntity"/>
            If null create a new product
            </summary>
        </member>
        <member name="M:Fooli.CompanyProductRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CompanyRequestModel">
            <summary>
            The company's request model
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.LogoImageName">
            <summary>
            The name of the logo image
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.LogoImageSource">
            <summary>
            The logo image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.LogoImageAlt">
            <summary>
            The logo image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.TextImageName">
            <summary>
            The name of the text image
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.TextImageSource">
            <summary>
            The text image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyRequestModel.TextImageAlt">
            <summary>
            The text image's alternative text
            </summary>
        </member>
        <member name="M:Fooli.CompanyRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.LeafletRequestModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Fooli.LeafletRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LeafletRequestModel.Url">
            <summary>
            The url 
            </summary>
        </member>
        <member name="P:Fooli.LeafletRequestModel.DateStart">
            <summary>
            The date from which the leaflet applies
            </summary>
        </member>
        <member name="P:Fooli.LeafletRequestModel.DateEnd">
            <summary>
            The date that ends what the leaflet applies
            </summary>
        </member>
        <member name="M:Fooli.LeafletRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ImageRequestModel">
            <summary>
            The image's request model
            </summary>
        </member>
        <member name="P:Fooli.ImageRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.ImageRequestModel.Source">
            <summary>
            The image's url
            </summary>
        </member>
        <member name="P:Fooli.ImageRequestModel.Alt">
            <summary>
            The image's alternative text
            </summary>
        </member>
        <member name="M:Fooli.ImageRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemRequestModel.Text">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemRequestModel.IsChecked">
            <summary>
            Shows if it is checked
            </summary>
        </member>
        <member name="M:Fooli.CheckListItemRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.NoteRequestModel">
            <summary>
            The list's request model
            </summary>
        </member>
        <member name="P:Fooli.NoteRequestModel.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="P:Fooli.NoteRequestModel.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="P:Fooli.NoteRequestModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:Fooli.NoteRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CategoryRequestModel">
            <summary>
            The category's request model
            </summary>
        </member>
        <member name="P:Fooli.CategoryRequestModel.Name">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:Fooli.CategoryRequestModel.Path">
            <summary>
            The category icon's path
            </summary>
        </member>
        <member name="P:Fooli.CategoryRequestModel.ParentCategoryId">
            <summary>
            The id of the parent category
            </summary>
        </member>
        <member name="M:Fooli.CategoryRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.LabelRequestModel">
            <summary>
            The label request model
            </summary>
        </member>
        <member name="P:Fooli.LabelRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LabelRequestModel.Slug">
            <summary>
            The slug
            </summary>
        </member>
        <member name="M:Fooli.LabelRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.PricePerMeasurementUnitRequestModel">
            <summary>
            The measurement unit's request model
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.Name">
            <summary>
            The name 
            ex. kilograms
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.Αbbreviation">
            <summary>
            The abbreviation
            ex. TM, kg, gr
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.RegularPrice">
            <summary>
            The regular price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.SalePrice">
            <summary>
            The price of the product when on sale
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.DateOnSaleFrom">
            <summary>
            Start date of sale price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitRequestModel.DateOnSaleTo">
            <summary>
            End date of sale price
            </summary>
        </member>
        <member name="M:Fooli.PricePerMeasurementUnitRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductCategoryRequestModel">
            <summary>
            The product category pair request model
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryRequestModel.ProductId">
            <summary>
            The <see cref="!:ProductRequestModel.Id"/> of the related <see cref="T:Fooli.ProductRequestModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryRequestModel.CategoryId">
            <summary>
            The <see cref="!:CategoryRequestModel.Id"/> of the related <see cref="T:Fooli.CategoryRequestModel"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductCategoryRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductLabelRequestModel">
            <summary>
            The product label pair's request model
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelRequestModel.ProductId">
            <summary>
            The <see cref="!:ProductRequestModel.Id"/> of the related <see cref="T:Fooli.ProductRequestModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelRequestModel.LabelId">
            <summary>
            The <see cref="!:LabelRequestModel.Id"/> of the related <see cref="T:Fooli.LabelRequestModel"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductLabelRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductRequestModel">
            <summary>
            The product's request model
            </summary>
        </member>
        <member name="P:Fooli.ProductRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="M:Fooli.ProductRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.PictureUrl">
            <summary>
            The profile's picture url
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Type">
            <summary>
            The user's type
            By default customer
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Gender">
            <summary>
            The gender
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Address1">
            <summary>
            The first-main address
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.Address2">
            <summary>
            The secondary address
            </summary>
        </member>
        <member name="P:Fooli.UserRequestModel.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="M:Fooli.UserRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.BaseResponseModel">
            <summary>
            Does not have id
            </summary>
        </member>
        <member name="P:Fooli.BaseResponseModel.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Fooli.BaseResponseModel.DateCreated">
            <summary>
            The date it was created
            </summary>
        </member>
        <member name="P:Fooli.BaseResponseModel.DateModified">
            <summary>
            The date it was last modified
            </summary>
        </member>
        <member name="M:Fooli.BaseResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.BranchResponseModel">
            <summary>
            The branch response model
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.BranchResponseModel.Company">
            <summary>
            The related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.BranchResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CompanyProductResponseModel">
            <summary>
            The company product's response model
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.Price">
            <summary>
            The product's price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.RegularPrice">
            <summary>
            The regular price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.SalePrice">
            <summary>
            The price of the product when on sale
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.DateOnSaleFrom">
            <summary>
            Start date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.DateOnSaleTo">
            <summary>
            End date of sale price
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.StockQuantity">
            <summary>
            Total number of products in stock
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.IsPurchasable">
            <summary>
            Shows if the product can be bought
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.IsVerified">
            <summary>
            The product is verified by the company
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.CompanyResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.Company">
            <summary>
            The related <see cref="T:Fooli.CompanyResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.ProductrId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.CompanyProductResponseModel.Product">
            <summary>
            The related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.CompanyProductResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CompanyResponseModel">
            <summary>
            The company's response model
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.LogoImageName">
            <summary>
            The name of the logo image
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.LogoImageSource">
            <summary>
            The logo image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.LogoImageAlt">
            <summary>
            The logo image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.TextImageName">
            <summary>
            The name of the text image
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.TextImageSource">
            <summary>
            The text image's url
            </summary>
        </member>
        <member name="P:Fooli.CompanyResponseModel.TextImageAlt">
            <summary>
            The text image's alternative text
            </summary>
        </member>
        <member name="M:Fooli.CompanyResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.EmbeddedCompanyProductResponseModel">
            <summary>
            The embedded version of a company product entity
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.Αbbreviation">
            <summary>
            The abbreviation
            ex. TM, kg, gr
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.Price">
            <summary>
            The price
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.IsVerified">
            <summary>
            The product is verified by the company
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.EmbeddedCompanyResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyProductResponseModel.Company">
            <summary>
            The related <see cref="T:Fooli.EmbeddedCompanyResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.EmbeddedCompanyProductResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.EmbeddedCompanyResponseModel">
            <summary>
            The embedded version of a company entity
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyResponseModel.TextImageName">
            <summary>
            The name of the text image
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyResponseModel.TextImageSource">
            <summary>
            The text image's url
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCompanyResponseModel.TextImageAlt">
            <summary>
            The text image's alternative text
            </summary>
        </member>
        <member name="M:Fooli.EmbeddedCompanyResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.LeafletResponseModel">
            <summary>
            The response model for the leaflet
            </summary>
        </member>
        <member name="P:Fooli.LeafletResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LeafletResponseModel.Url">
            <summary>
            The url 
            </summary>
        </member>
        <member name="P:Fooli.LeafletResponseModel.DateStart">
            <summary>
            The date from which the leaflet applies
            </summary>
        </member>
        <member name="P:Fooli.LeafletResponseModel.DateEnd">
            <summary>
            The date that ends what the leaflet applies
            </summary>
        </member>
        <member name="P:Fooli.LeafletResponseModel.CompanyId">
            <summary>
            The <see cref="P:Fooli.BaseEntity.Id"/> of the related <see cref="T:Fooli.CompanyEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.LeafletResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ImageResponseModel">
            <summary>
            The image response model
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.Source">
            <summary>
            The image's url
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.Alt">
            <summary>
            The image's alternative text
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.ProductId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.ProductEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.BranchId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.BranchEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.ImageResponseModel.CompanyProductId">
            <summary>
            The company's product's image
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.CompanyProductEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.ImageResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CheckListItemResponseModel">
            <summary>
            The check list item response model
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.Text">
            <summary>
            The item
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.IsChecked">
            <summary>
            Shows if it is checked
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.NoteId">
            <summary>
            The <see cref="!:NoteEntity.Id"/> of the related <see cref="T:Fooli.NoteEntity"/>
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.DateCreated">
            <summary>
            The date it was created
            </summary>
        </member>
        <member name="P:Fooli.CheckListItemResponseModel.DateModified">
            <summary>
            The date it was last modified
            </summary>
        </member>
        <member name="M:Fooli.CheckListItemResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.NoteResponseModel">
            <summary>
            The list's response model
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.Title">
            <summary>
            The title
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.DateCreated">
            <summary>
            The date the note was created
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.DateModified">
            <summary>
            The date the list was last modified
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.CheckListItems">
            <summary>
            The list's items
            </summary>
        </member>
        <member name="P:Fooli.NoteResponseModel.UserId">
            <summary>
            The <see cref="!:UserEntity.Id"/> of the related <see cref="T:Fooli.UserEntity"/>
            </summary>
        </member>
        <member name="M:Fooli.NoteResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.CategoryResponseModel">
            <summary>
            The category response model
            </summary>
        </member>
        <member name="P:Fooli.CategoryResponseModel.Name">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:Fooli.CategoryResponseModel.Path">
            <summary>
            The category icon's path
            </summary>
        </member>
        <member name="P:Fooli.CategoryResponseModel.ParentCategoryId">
            <summary>
            The id of the parent category
            The <see cref="!:CategoryResponseModel.Id"/> of the related <see cref="T:Fooli.CategoryResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.CategoryResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.EmbeddedCategoryResponseModel">
            <summary>
            The embedded response model of a category entity
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCategoryResponseModel.Name">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedCategoryResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:Fooli.EmbeddedCategoryResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.EmbeddedLabelResponseModel">
            <summary>
            The embedded response model of a label entity
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedLabelResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedLabelResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:Fooli.EmbeddedLabelResponseModel.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Fooli.EmbeddedLabelResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.LabelResponseModel">
            <summary>
            The label response model
            </summary>
        </member>
        <member name="P:Fooli.LabelResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.LabelResponseModel.Slug">
            <summary>
            The slug
            </summary>
        </member>
        <member name="P:Fooli.LabelResponseModel.ProductLabels">
            <summary>
            The labels and products
            </summary>
        </member>
        <member name="M:Fooli.LabelResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.PricePerMeasurementUnitResponseModel">
            <summary>
            The measurement unit's response model
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.Name">
            <summary>
            The name 
            ex. kilograms
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.Αbbreviation">
            <summary>
            The abbreviation
            ex. TM, kg, gr
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.RegularPrice">
            <summary>
            The regular price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.SalePrice">
            <summary>
            The price of the product when on sale
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.IsOnSale">
            <summary>
            Shows if product is on sale
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.DateOnSaleFrom">
            <summary>
            Start date of sale price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.DateOnSaleTo">
            <summary>
            End date of sale price
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.CompanyProductId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.CompanyProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.PricePerMeasurementUnitResponseModel.CompanyProduct">
            <summary>
            The related <see cref="T:Fooli.CompanyProductResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.PricePerMeasurementUnitResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductCategoryResponseModel">
            <summary>
            The product category pair's response model
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryResponseModel.ProductId">
            <summary>
            The <see cref="!:ProductResponseModel.Id"/> of the related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryResponseModel.Product">
            <summary>
            The related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryResponseModel.CategoryId">
            <summary>
            The <see cref="!:CategoryResponseModel.Id"/> of the related <see cref="T:Fooli.CategoryResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductCategoryResponseModel.Category">
            <summary>
            The related <see cref="T:Fooli.CategoryResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductCategoryResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductLabelResponseModel">
            <summary>
            The product label pair's response model
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelResponseModel.ProductId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelResponseModel.Product">
            <summary>
            The related <see cref="T:Fooli.ProductResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelResponseModel.LabelId">
            <summary>
            The <see cref="P:Fooli.BaseResponseModel.Id"/> of the related <see cref="T:Fooli.LabelResponseModel"/>
            </summary>
        </member>
        <member name="P:Fooli.ProductLabelResponseModel.Label">
            <summary>
            The related <see cref="T:Fooli.LabelResponseModel"/>
            </summary>
        </member>
        <member name="M:Fooli.ProductLabelResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.ProductResponseModel">
            <summary>
            The product's response model
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.Price">
            <summary>
            The price
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.Images">
            <summary>
            The product's images
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.CompaniesProducts">
            <summary>
            The companies and products
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="P:Fooli.ProductResponseModel.Categories">
            <summary>
            The category and product pairs
            </summary>
        </member>
        <member name="M:Fooli.ProductResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.UserResponseModel">
            <summary>
            The user's response model
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.PictureUrl">
            <summary>
            The profile's picture url
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Type">
            <summary>
            The user's type
            By default customer
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Gender">
            <summary>
            The gender
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Address1">
            <summary>
            The first-main address
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.Address2">
            <summary>
            The secondary address
            </summary>
        </member>
        <member name="P:Fooli.UserResponseModel.PostalCode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="M:Fooli.UserResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Fooli.DI">
            <summary>
            The default application services that should be available everywhere in the application
            </summary>
        </member>
        <member name="F:Fooli.DI.mMapper">
            <summary>
            The member of the <see cref="P:Fooli.DI.GetMapper"/> property
            </summary>
        </member>
        <member name="P:Fooli.DI.Host">
            <summary>
            The host
            </summary>
        </member>
        <member name="P:Fooli.DI.GetMapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="T:Fooli.EntryPoint">
            <summary>
            The entry point
            </summary>
        </member>
        <member name="M:Fooli.EntryPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.EntryPoint.SetUp(Fooli.FooliDBContext)">
            <summary>
            Creates and adds data to the data base
            </summary>
            <param name="context">The data base's context</param>
            <returns></returns>
        </member>
        <member name="T:Fooli.FrameworkConstructionExtensions">
            <summary>
            Extension methods 
            </summary>
        </member>
        <member name="F:Fooli.FrameworkConstructionExtensions.RequestModelSuffix">
            <summary>
            RequestModel
            </summary>
        </member>
        <member name="F:Fooli.FrameworkConstructionExtensions.EntitySuffix">
            <summary>
            Entity
            </summary>
        </member>
        <member name="F:Fooli.FrameworkConstructionExtensions.EmbeddedPrefix">
            <summary>
            Embedded
            </summary>
        </member>
        <member name="F:Fooli.FrameworkConstructionExtensions.ResponseModelSuffix">
            <summary>
            ResponseModel
            </summary>
        </member>
        <member name="T:Fooli.ControllersHelper">
            <summary>
            Helper - additional methods for all the controllers
            </summary>
        </member>
        <member name="M:Fooli.ControllersHelper.PostAsync``2(Fooli.FooliDBContext,Microsoft.EntityFrameworkCore.DbSet{``0},``0,System.Func{``0,``1})">
            <summary>
            Creates a post request
            </summary>
            <typeparam name="TEntity">The entity</typeparam>
            <typeparam name="TResponseModel">The response model</typeparam>
            <param name="dBContext">The db context</param>
            <param name="dbSet">The db set</param>
            <param name="entity">The model</param>
            <param name="projector">Creates a <typeparamref name="TResponseModel"/> from the inserted <typeparamref name="TEntity"/></param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.GetAllAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Gets all the response models of a db set
            </summary>
            <typeparam name="TEntity">The entity</typeparam>
            <typeparam name="TResponseModel">The response model</typeparam>
            <param name="query">The db set</param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.GetAsync``2(System.Linq.IQueryable{``0},AutoMapper.IMapper,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Gets a specified response model of an entity if exists with the specified id
            </summary>
            <typeparam name="TEntity">The entity</typeparam>
            <typeparam name="TResponseModel">The response model</typeparam>
            <param name="dbSet">The db set</param>
            <param name="mapper">The mapper</param>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.DeleteAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Linq.IQueryable{``0},AutoMapper.IMapper,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Deletes the entity that follows the expression if exists
            </summary>
            <typeparam name="TEntity">The entity</typeparam>
            <typeparam name="TResponseModel">The response model</typeparam>
            <param name="dbContext">The db context</param>
            <param name="queryable">The db set</param>
            <param name="mapper">The mapper</param>
            <param name="expression">The expression</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.FromRequestModel``2(``1,System.Action{``0})">
            <summary>
            Creates and returns a <typeparamref name="TEntity"/> from the specified <typeparamref name="TRequestModel"/>
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TRequestModel"></typeparam>
            <param name="model"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.ToResponseModel``2(``0)">
            <summary>
            Creates and returns a <typeparamref name="TResponseModel"/> from a <typeparamref name="TEntity"/>
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResponseModel"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.IncludeNavigationProperties``1(System.Linq.IQueryable{``0},System.String[])">
            <summary>
            Includes in a db set all the navigation properties if they exist
            </summary>
            <typeparam name="TEntity">The entity</typeparam>
            <param name="dbSet">The db set</param>
            <param name="navigationPropertyNames">The names of the navigation properties</param>
            <returns></returns>
        </member>
        <member name="M:Fooli.ControllersHelper.ParseToMultiLevelNavigationProperties(System.String[])">
            <summary>
            Parses the navigation properties to the correct form to include them later to a db set
            </summary>
            <param name="navigationPropertyNames">The names of the navigation properties</param>
            <returns></returns>
        </member>
        <member name="T:Fooli.TypeHelpers">
            <summary>
            Helper methods for <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="M:Fooli.TypeHelpers.GetNonNullableType(System.Type)">
            <summary>
            Gets the T from the <see cref="T:System.Nullable`1"/> of the specified <paramref name="type"/>
            when the <paramref name="type"/> is nullable, otherwise it returns the type
            </summary>
            <param name="type">The type</param>
            <returns></returns>
        </member>
        <member name="T:Fooli.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fooli.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Fooli.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Fooli.IgnoreNullResolver">
            <summary>
            Resolver used for using the destination member value when the source member is null.
            NOTE: This resolver is sued when mapping values from a request model to a database entity! 
            </summary>
        </member>
        <member name="M:Fooli.IgnoreNullResolver.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Fooli.IgnoreNullResolver.Resolve(System.Object,System.Object,System.Object,System.Object,AutoMapper.ResolutionContext)">
            <summary>
            Implementors use source object to provide a destination object.
            </summary>
            <param name="source">Source object</param>
            <param name="destination">Destination object</param>
            <param name="sourceMember">Source member</param>
            <param name="destinationMember">Destination member</param>
            <param name="context">The context of the mapping</param>
            <returns></returns>
        </member>
        <member name="T:Fooli.Routes">
            <summary>
            The string the represent the API routes
            </summary>
        </member>
        <member name="F:Fooli.Routes.HomeRoute">
            <summary>
            The home route
            /fooli
            </summary>
        </member>
        <member name="F:Fooli.Routes.CategoriesRoute">
            <summary>
            The route to the categories
            fooli/categories
            </summary>
        </member>
        <member name="F:Fooli.Routes.CategoryRoute">
            <summary>
            The route to a category
            fooli/categories/3
            </summary>
        </member>
        <member name="F:Fooli.Routes.LabelsRoute">
            <summary>
            The route to the labels
            fooli/labels
            </summary>
        </member>
        <member name="F:Fooli.Routes.LabelRoute">
            <summary>
            The route to a label
            fooli/labels/3
            </summary>
        </member>
        <member name="F:Fooli.Routes.UsersRoute">
            <summary>
            The route for the users
            /fooli/users
            </summary>
        </member>
        <member name="F:Fooli.Routes.UserRoute">
            <summary>
            The route for a users with id
            /fooli/users/1
            </summary>
        </member>
        <member name="F:Fooli.Routes.UserNotesRoute">
            <summary>
            The route for a user's notes
            /fooli/users/1/notes
            </summary>
        </member>
        <member name="F:Fooli.Routes.UserNoteRoute">
            <summary>
            The route for a user's note with noteId and userId
            /fooli/users/1/notes/5
            </summary>
        </member>
        <member name="F:Fooli.Routes.UserNoteCheckListItems">
            <summary>
            The route for a user note's check list items
            fooli/users/2/notes/1/checkListItems
            </summary>
        </member>
        <member name="F:Fooli.Routes.UserNoteCheckListItem">
            <summary>
            The route for a user note's check list item
            fooli/users/2/notes/1/checkListItems/3
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompaniesRoute">
            <summary>
            The route for all companies
            fooli/companies
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyRoute">
            <summary>
            The route for a company with specified id
            fooli/companies/2
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyBranchesRoute">
            <summary>
            The route for a company's branches route
            fooli/companies/2/branches
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyBranchRoute">
            <summary>
            The route for a company's branch
            fooli/companies/2/branches/4
            </summary>
        </member>
        <member name="F:Fooli.Routes.BranchImagesRoute">
            <summary>
            The route for the all images of a company
            fooli/companies/2/branches/4/images
            </summary>
        </member>
        <member name="F:Fooli.Routes.BranchImageRoute">
            <summary>
            The route for a company's image with specified image id and company id
            fooli/companies/2/branches/4/images/5
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyLeafletsRoute">
            <summary>
            The route of a company's leaflets
            fooli/companies/1/leaflets
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyLeafletRoute">
            <summary>
            The route of a company's leaflet
            fooli/companies/1/leaflets/3
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyProductsRoute">
            <summary>
            The route of a company's products
            fooli/companies/2/companyProducts
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyProductRoute">
            <summary>
            The route of a company's product
            fooli/companies/2/companyProducts/3
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyProductImagesRoute">
            <summary>
            The route for the all images of a company's product
            fooli/companies/2/companyProducts/3/images
            </summary>
        </member>
        <member name="F:Fooli.Routes.CompanyProductImageRoute">
            <summary>
            The route for an image of a company's product with specified image id and company product id
            fooli/companies/2/companyProducts/3/images/1
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductsRoute">
            <summary>
            The route for the products
            fooli/products
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductRoute">
            <summary>
            The route for a specified product
            fooli/products/7
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductImagesRoute">
            <summary>
            The route for a product's images
            fooli/products/1/images
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductImageRoute">
            <summary>
            The route for a product's image
            fooli/products/1/images/4
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductCategoriesRoute">
            <summary>
            The route for a product's categories
            fooli/products/categories
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductCategoryRoute">
            <summary>
            The route to a product's category
            fooli/products/categories/9
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductLabelsRoute">
            <summary>
            The route for a product's labels
            fooli/products/labels
            </summary>
        </member>
        <member name="F:Fooli.Routes.ProductLabelRoute">
            <summary>
            The route to a product's label
            fooli/products/labels/6
            </summary>
        </member>
        <member name="T:Fooli.Startup">
            <summary>
            The start up
            </summary>
        </member>
        <member name="M:Fooli.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Fooli.Startup.Configuration">
            <summary>
            Represents a set of key/value application configuration properties.
            </summary>
        </member>
        <member name="M:Fooli.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            This method gets called by the runtime. Use this method to add services to the container.
        </member>
        <member name="M:Fooli.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Fooli.FooliDBContext)">
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        </member>
    </members>
</doc>
